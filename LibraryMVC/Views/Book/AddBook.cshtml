@model WebModelServices.BookModel.ViewModel.AddBookViewModel

@using (Html.BeginForm(null,null,FormMethod.Post,new { id="books"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AddBookViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookGenreId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
          @(Html.Kendo().DropDownList()
          .Name("BookGenreId")
          .DataTextField("Name")
          .DataValueField("BookGenreId")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("GetBookGenre", "Book");
              });
          })
          
          .HtmlAttributes(new { style = "width: 50%" })
                )
                </div>
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
              <input id="addButton" type="button"  value="AddButton">
              <input id="addBookCloseButton" type="button" value="Cancel">
            </div>
        </div>
   
}

<script>
    $(document).ready(function () {
        $("#addButton").click(function () {
            var formData = $('#books').serialize();
            
            $.post('@Url.Action("AddBook")', formData , function (data,status) {
                
               // alert(data);
                if (data.isDone)
                {
                    
                    var emptyString = "";
                    var wnd = $("#books").closest("#AddNewBook").data("kendoWindow");
                    $('#grid').data('kendoGrid').dataSource.read();
                    $('#grid').data('kendoGrid').refresh();
                    wnd.close();
                    wnd.content(emptyString);
                }
                   
                else
                    $("#books").parents("#AddNewBook").html(data);
            });
        })
    })
    
        
    
    
</script>