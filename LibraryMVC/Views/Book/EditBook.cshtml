@model WebModelServices.BookModel.ViewModel.EditBookViewModel

@using (Html.BeginForm(null,null,FormMethod.Post,new {id = "editBookForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EditBookViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(m => m.BookId);
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookGenreIdd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownList()
          .Name("BookGenreIdd")
          .DataTextField("Name")
          .DataValueField("BookGenreId")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("GetBookGenre", "Book");
              });
          })
          .HtmlAttributes(new { style = "width: 50%" })
                )
            </div>
        </div>
    </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" id="saveButton" class="btn btn-default" />
            </div>
        </div>
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    @*$(document).ready(function () {
        $("#saveButton").click(function () {
            var formData = $('#editBookForm').serialize();
            debugger;
            $.post('@Url.Action("EditBook")', formData , function (data,status) {
                debugger;
               // alert(data);
                if (data.isDone)
                {
                    $("#editBookForm").closest("#EditBook").data("kendoWindow").close();
                    $('#grid').data('kendoGrid').dataSource.read();
                    $('#grid').data('kendoGrid').refresh();
                }

                else
                    $("#editBookForm").parents("#EditBook").html(data);
            });
        })
    })*@




</script>