@model  IList<WebModelServices.BookModel.ViewModel.BookViewModel>

<p>
  @(Html.Kendo().Grid<WebModelServices.BookModel.ViewModel.BookViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.BookId);
        columns.Bound(p => p.Author).Width(120);
        columns.Bound(p => p.Title).Width(120);
        columns.Bound(p => p.ReleaseDate).Width(120);
        columns.Bound(p => p.Count).Width(120);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.ProductID))
        .Create(update => update.Action("EditingPopup_Create", "Grid"))
        .Read(read => read.Action(" AllBooks", "Book"))
        .Update(update => update.Action("EditingPopup_Update", "Grid"))
        .Destroy(update => update.Action("EditingPopup_Destroy", "Grid"))
    )
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>

</p>
