@model IList<WebModelServices.BorrowModel.ViewModel.BorrowsViewModel>

@(Html.Kendo().Grid<WebModelServices.BorrowModel.ViewModel.UserWithBorrowsViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.FirstName)
              .Width(240);
            columns.Bound(c => c.LastName);
            columns.Bound(c => c.BookName);
        })
        .HtmlAttributes(new { style = "height: 550px;" })
        .Scrollable()
        .Groupable()
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetUsersWithBorrows", "Borrow"))
            .PageSize(20)
        )
)

@(Html.Kendo().Grid<WebModelServices.BorrowModel.ViewModel.BorrowedBookViewModel>()
        .Name("grid1")
        .Columns(columns =>
        {
            columns.Bound(c => c.Title)
              .Width(240);
            columns.Bound(c => c.Author);
            columns.Bound(c => c.FromDate);
            columns.Bound(c => c.ToDate);
            columns.Bound(c => c.ISBN);
            columns.Bound(c => c.UserName);
        })
        .HtmlAttributes(new { style = "height: 550px;" })
        .Scrollable()
        .Groupable()
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetBorrowedBook", "Borrow"))
            .PageSize(20)
        )
)
@(Html.Kendo().Button()
            .Name("AddBorrow")
            .Tag("a")
            .Content("Add New Borrow"))
@*<button type="button" class="myButton" onclick="showAddView()">Add Borrow</button>
<p id="myPar"> button on </p>*@

@(Html.Kendo().Window().Name("AddNewBorrow")
    .Title("Add Book")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(300)
    .Events(e => e.Close("onCloseAddNewBorrow"))
    
    //.LoadContentFrom("AddBook", "Book")
)
@*@(Html.Kendo().Window().Name("EditBook")
    .Title("Edit Book")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(300)
//.LoadContentFrom("EditBook", "Book")
)
@(Html.Kendo().Window().Name("BookDetails")
    .Title("Book Details")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(300)
//.LoadContentFrom("BookDetails", "Book")
)*@

<script type="text/x-kendo-template" id="template">
    <div id="d">
        <p>Add WIndow</p>
        <p>Add WIndow</p>
    </div>
</script>

<script type="text/javascript">

    function onCloseAddNewBorrow()
    {
        
        var emptyString = "";
        $("#Testowy").empty();
        var wnd = $("#AddNewBorrow").data("kendoWindow");
        wnd.content(emptyString);
    }
    $(document).on("click", ("#AddBorrow"), function showAddNewBorrowView(e) {
        var url = '@Url.Action("AddNewBorrow", "Borrow")';
        $.get(url, function (data) {
            var wnd = $("#AddNewBorrow").data("kendoWindow");
            wnd.content(data);
            wnd.center().open();
        })
    })
    $(document).on("click", ("#addNext"), function addNextBorrowDropDownList(e) {
        var dropdownlist = "<input id=" + "\"dropdownlist" + TempId + "\"/>" + "<input id=\"rem-btn" + TempId + "\"" + "type=\"button\" value=\"Remove\"/>"
        var newdropDownId = "#dropdownlist" + TempId;
        var header = "<h4>" + newdropDownId + "</h4>"
        $("#dropDownDiv").append(header);
        $("#dropDownDiv").append(dropdownlist);
     
        addDropDownList(TempId);
        TempId++;
    })
    function dropDownChange (e)
    {
        debugger;
        //addObjectToDropDown(indexToAdd, e.sender)
        var currentDropDownId = "#"+e.sender.element.context.id;

        addToAllDD(indexToAdd, currentDropDownId);
        bookToRemoveId = e.sender.value();
        removeBookFromAllDD(bookToRemoveId, currentDropDownId);
        
    }
    function dropDownOpen(e)
    {
        var val = e.sender.value();
        var text = e.sender.text();
        var div = $("#dropDownDiv").data();
        indexToAdd.BookId = val;
        indexToAdd.Title = text;
        var allID = allDropDownId;
    }

    function addObjectToDropDown(book, dropDownId)
    {
        debugger;
        var values = [];
        var dd = $(dropDownId).data("kendoDropDownList");
        var selectedDataSource = dd.dataSource;
        var len = selectedDataSource._data.length;
        if (len > 0) {
            var i;

            for (i = 0; i < len; i++) {
                var previousIndex = 0;
                if(i>0)
                    previousIndex = i - 1;

                var val = {
                    Title: selectedDataSource._data[i].Title,
                    BookId: selectedDataSource._data[i].BookId
                }
                if ((selectedDataSource._data[i].BookId > book.BookId) && (selectedDataSource._data[previousIndex].BookId < book.BookId))
                {
                    debugger;
                    values.push(book);
                    values.push(val);
                }
                else
                {
                    values.push(val)
                }
            }
        }
        $(dropDownId).data("kendoDropDownList").setDataSource(values);
    }
    function deleteObjectFromDropDown(bookToRemoveId,dropDownId)
    {
        debugger;
        var values = [];
        var selectedDataSource = $(dropDownId).data("kendoDropDownList").dataSource;
        var len = selectedDataSource._data.length;
        if (len > 0) {
            var i;

            for (i = 0; i < len; i++) {
                var val = {
                    Title: selectedDataSource._data[i].Title,
                    BookId: selectedDataSource._data[i].BookId
                }
                if (selectedDataSource._data[i].BookId != bookToRemoveId) {
                    values.push(val);
                }
            }
        }
        $(dropDownId).data("kendoDropDownList").setDataSource(values);
       
    }
    function removeBookFromAllDD(bookId,currentDropDownId)
    {
        var length = allDropDownId.length;
        var currentElementId = currentDropDownId;
        for (var i = 0; i < length; i++) {
            debugger;
            if (allDropDownId[i] != currentElementId) {
                var selectedDropDown = allDropDownId[i];
                deleteObjectFromDropDown(bookId, selectedDropDown);
            }
        }
    }
    function addToAllDD(objectToAdd,dropDownId)
    {
        var length = allDropDownId.length;
        var currentElementId = dropDownId;
        for (var i = 0; i < length; i++) {
            debugger;
            if (allDropDownId[i] != currentElementId) {
                var selectedDropDown = allDropDownId[i];
                addObjectToDropDown(objectToAdd, selectedDropDown);
            }
        }
    }
</script>

<style type="text/css">
    #details-container {
        padding: 10px;
    }

        #details-container h2 {
            margin: 0;
        }

        #details-container em {
            color: #8c8c8c;
        }

        #details-container dt {
            margin: 0;
            display: inline;
        }
</style>

<style>
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>